[tool.poetry]
name = "volur-ai-sdk"
version = "0.0.0"
description = ""
authors = []
packages = [
    { include = "volur", from="src" },
    { include = "volur", from="gen" },
    # Including this temporary
    # A library from Google is supporting protobuf ^5.0
    # https://github.com/googleapis/python-api-common-protos/commit/28fc17a9208aa98782acc6bee6c40ec12b959706
    # We need to wait for a release
    { include = "google", from="gen" },
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
# Update these versions ones they are updated in https://github.com/volur-ai/apis/blob/main/buf.gen.yaml#L14
grpcio = ">=1.62,<1.67"
protobuf = "^5.26"
pydantic-settings = "^2.2"
loguru = "^0.7"
azure-functions = "^1.19.0"
anyio = "^4.3.0"

[tool.poetry.group.dev.dependencies]
mypy = ">=1"
ruff = ">=0"
grpc-stubs = ">=1"
types-protobuf = ">=4"
mypy-protobuf = ">=3"
pytest = ">=8"
pytest-cov = ">=4"
pytest-asyncio = ">=0"
types-aiofiles = ">=23"
jupyter = ">=1"
faker = ">=24"
pyright = ">=1"
memray = ">=1"

[tool.poetry.group.docs.dependencies]
mkdocstrings-python = "^1"
mkdocs-gen-files = "^0"
mkdocs-literate-nav = "^0"
mkdocs-section-index ="^0"
mkdocs-material = "^9"

[tool.mypy]
strict = true
incremental = false
explicit_package_bases = true
mypy_path = [
    "src",
    "tests",
    "gen",
    "examples",
]
plugins = [
    "pydantic.mypy",
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = [
    "F", # https://beta.ruff.rs/docs/rules/#pyflakes-f
    "W", # https://beta.ruff.rs/docs/rules/#warning-w
    "E", # https://beta.ruff.rs/docs/rules/#error-e
    "I", # https://beta.ruff.rs/docs/rules/#isort-i
    "N", # https://beta.ruff.rs/docs/rules/#pep8-naming-n
    "ANN", # https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "B", # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "RUF", # https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
    "PT", # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
]
exclude = [
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
]

[tool.pyright]
include = [
    "gen",
    "src",
]
strict = [
    "gen",
    "src",
]
venv = ".venv"
venvPath = "."

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report html"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
